{"mappings":"YAAA,IACMA,EAAS,IAAIC,gBAAgB,CACjCC,OAFU,mCAGVC,QAAS,KACTC,KAAM,EACNC,SAAU,KAENC,EAAO,CACXC,mBAAoBC,SAASC,cAAc,oBAC3CC,eAAgBF,SAASC,cAAc,iBAEzCE,MAAM,wCAA+CC,OAAPZ,IAAUa,MAAK,SAAAC,G,OAC3DA,EAASC,OAAOF,MAAK,SAAAG,G,OASKC,GANTC,EAHsBF,GAIdG,aAMzBb,EAAKC,mBAAmBa,YAAcH,EALtCI,QAAQC,IAAIJ,EAAMK,UAOIA,EANPL,EAAMK,SAOfC,EAAeD,EAASE,QAC5B,SAACC,EAAKC,G,OAAYD,GAOpBE,GADmBC,EANmBF,GAOtCC,MACAE,EAFmBD,EAEnBC,OACAC,EAHmBF,EAGnBE,WACAC,EAJmBH,EAInBG,YACAC,EALmBJ,EAKnBI,YACAC,EANmBL,EAMnBK,IAEO,gEAGStB,OADgBsB,EAAI,kEACAtB,OAApBmB,EAAW,WACjBnB,OAD0BoB,EAAY,kBAExBpB,OADdgB,EAAM,mCAEgBhB,OADRkB,EAAO,0CACalB,OAAZqB,EAAY,8BAd9C,IAAqBJ,EACnBD,EACAE,EACAC,EACAC,EACAC,EACAC,IAXE,SAEF5B,EAAKI,eAAeyB,mBAAmB,YAAaX,GAdtD,IAAmBN,EASKK,EAChBC,EAJoBP,Q","sources":["src/js/news.js"],"sourcesContent":["const KEY = '834e5c777b504c48a337b01b262c10d5';\nconst params = new URLSearchParams({\n  apiKey: KEY,\n  country: 'ua',\n  page: 1,\n  pageSize: 10,\n});\nconst refs = {\n  outputTotalResults: document.querySelector('.js-output-total'),\n  outputArticles: document.querySelector('.js-articles'),\n};\nfetch(`https://newsapi.org/v2/top-headlines?${params}`).then(response =>\n  response.json().then(data => fetchData(data))\n);\n\nfunction fetchData(items) {\n  outputTotalResults(items.totalResults);\n  console.log(items.articles);\n  renderArticles(items.articles);\n}\n\nfunction outputTotalResults(numberResults) {\n  refs.outputTotalResults.textContent = numberResults;\n}\nfunction renderArticles(articles) {\n  const makeArticles = articles.reduce(\n    (acc, article) => acc + makeArticle(article),\n    ''\n  );\n  refs.outputArticles.insertAdjacentHTML('beforeend', makeArticles);\n}\n\nfunction makeArticle({\n  title,\n  author,\n  urlToImage,\n  description,\n  publishedAt,\n  url,\n}) {\n  return `\n  <li class=\"list__item\">\n    <a class=\"list__link\" href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <img src=\"${urlToImage}\" alt=\"${description}\">\n      <h2>${title}</h2>\n      <p><b>Author</b>: ${author}</p>\n      <p><b>Published Date</b>: ${publishedAt}</p>\n\n    </a>\n  </li>`;\n}\n//// author: \"Українська правда\"\n//// content: \", .\\r\\n: \\r\\n: \\\" , . . , .\\r\\n , , . . , , – .\\r\\n , \\\".\\r\\n: , .\\r\\n\\\" ( – .), , . , \\\"HIMARS\\\", \\\", – .\\r\\n , , , .\\r\\n\\\" , , . , \\\", - .\\r\\n: 31 Politico Maxar, .\\r\\n InformNapalm ,   .\\r\\n , \\\" \\\".\\r\\n:\\r\\n<ul><li>29    , . , 53 .… [+86 chars]\"\n//// description: \"\"\n//// publishedAt: \"2022-08-01T18:04:27Z\"\n// source: {id: null, name: \"Pravda.com.ua\"}\n//// title: \"Полонених в Оленівці могли вбити за допомогою термобаричної зброї – генпрокурор - Українська правда\"\n// url: \"https://www.pravda.com.ua/news/2022/08/1/7361416/\"\n//// urlToImage: \"https://img.pravda.com/images/doc/9/0/9055996-olenivka-suputnyk.jpg\"\n// const fetchUsers = async () => {\n//   const baseUrl = \"https://jsonplaceholder.typicode.com\";\n//   const userIds = [1, 2, 3];\n\n//   // 1. Створюємо масив промісів\n//   const arrayOfPromises = userIds.map(async userId => {\n//     const response = await fetch(`${baseUrl}/users/${userId}`);\n//     return response.json();\n//   });\n\n//   // 2. Запускаємо усі проміси паралельно і чекаємо на їх завершення\n//   const users = await Promise.all(arrayOfPromises);\n//   console.log(users);\n// };\n\n// fetchUsers();\n\n// const YOUR_API_KEY = '8b0c7f7b-6f51-46e6-aecc-c1399eedc5c7';\n// const BASE_URL = 'http://eventregistry.org/api/v1/article';\n// const options = {action: \"getArticles\",\n//     // \"keyword\": \"Barack Obama\",\n//     // \"articlesPage\": 1,\n//     // \"articlesCount\": 100,\n//     // \"articlesSortBy\": \"date\",\n//     // \"articlesSortByAsc\": false,\n//     // \"articlesArticleBodyLen\": -1,\n//     // \"resultType\": \"articles\",\n//     // \"dataType\": [\n//     //   \"news\",\n//     //   \"pr\"\n//     // ],\n//     apiKey: \"8b0c7f7b-6f51-46e6-aecc-c1399eedc5c7\",\n//     // \"forceMaxDataTimeWindow\": 31,\n//   };\n//   const po=JSON.stringify(options);\n// console.log(po);\n\n// fetch(`http://eventregistry.org/api/v1/article/getArticles?`,po).then(response => {\n//     if (!response.ok) {\n//       throw new Error(response.status);\n//     }\n//     console.log(response.status);\n//     return response.json();\n// }).then(data => console.log(data))\n//     .catch(error=>console.log(error))\n// console.log();\n// console.log('');\n// console.log();\n"],"names":["$963508ebb68a0a78$var$params","URLSearchParams","apiKey","country","page","pageSize","$963508ebb68a0a78$var$refs","outputTotalResults","document","querySelector","outputArticles","fetch","concat","then","response","json","data","numberResults","items","totalResults","textContent","console","log","articles","makeArticles","reduce","acc","article","title","param","author","urlToImage","description","publishedAt","url","insertAdjacentHTML"],"version":3,"file":"news.322f2a5c.js.map"}